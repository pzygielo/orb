/*
 * Copyright (c) 1997, 2020 Oracle and/or its affiliates.
 * Copyright (c) 1998-1999 IBM Corp. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
 * v. 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License v2.0
 * w/Classpath exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause OR GPL-2.0 WITH
 * Classpath-exception-2.0
 */

package javax.rmi.CORBA.serialization;

/**
 * Stock.java
 * Generated by the IDL-to-Java compiler (portable), version "3.0"
 * from org/omg/boxedRMI/examples/stock/seq1_Stock.idl
 * Friday, May 14, 1999 12:57:04 o'clock PM EDT
 */

public abstract class Stock implements org.omg.CORBA.portable.StreamableValue {
    protected float current = (float) 0;
    protected String symbol = null;

    private static String[] _truncatable_ids = {
            StockHelper.id()
    };

    public String[] _truncatable_ids() {
        return _truncatable_ids;
    }

    public abstract float update();

    public void _read(org.omg.CORBA.portable.InputStream istream) {
        this.current = istream.read_float();
        this.symbol = org.omg.CORBA.WStringValueHelper.read(istream);
    }

    public void _write(org.omg.CORBA.portable.OutputStream ostream) {
        ostream.write_float(this.current);
        org.omg.CORBA.WStringValueHelper.write(ostream, this.symbol);
    }

    public org.omg.CORBA.TypeCode _type() {
        return StockHelper.type();
    }

} // class Stock
