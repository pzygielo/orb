/*
 * Copyright (c) 1997, 2020 Oracle and/or its affiliates.
 * Copyright (c) 1998-1999 IBM Corp. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
 * v. 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License v2.0
 * w/Classpath exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause OR GPL-2.0 WITH
 * Classpath-exception-2.0
 */

package javax.rmi.CORBA.serialization;

/**
 * org/omg/boxedRMI/examples/stock/seq1_StockHelper.java
 * Generated by the IDL-to-Java compiler (portable), version "3.0"
 * from org/omg/boxedRMI/examples/stock/seq1_Stock.idl
 * 02 June 1999 21:40:11 o'clock GMT+00:00
 */

public final class seq1_StockHelper implements org.omg.CORBA.portable.BoxedValueHelper {
    private static String _id = "RMI:[Ljavax.rmi.CORBA.serialization.Stock;:B60458ECD6E4794E:CCA70DAA84257A80";

    private static seq1_StockHelper _instance = new seq1_StockHelper();

    public seq1_StockHelper() {
    }

    public static void insert(org.omg.CORBA.Any a, Stock[] that) {
        org.omg.CORBA.portable.OutputStream out = a.create_output_stream();
        a.type(type());
        write(out, that);
        a.read_value(out.create_input_stream(), type());
    }

    public static Stock[] extract(org.omg.CORBA.Any a) {
        return read(a.create_input_stream());
    }

    private static org.omg.CORBA.TypeCode __typeCode = null;
    private static boolean __active = false;

    synchronized public static org.omg.CORBA.TypeCode type() {
        if (__typeCode == null) {
            synchronized (org.omg.CORBA.TypeCode.class) {
                if (__typeCode == null) {
                    if (__active) {
                        return org.omg.CORBA.ORB.init().create_recursive_tc(_id);
                    }
                    __active = true;
                    __typeCode = StockHelper.type();
                    __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(0, __typeCode);
                    __typeCode = org.omg.CORBA.ORB.init().create_value_box_tc(_id, "seq1_Stock", __typeCode);
                    __active = false;
                }
            }
        }
        return __typeCode;
    }

    public static String id() {
        return _id;
    }

    public static Stock[] read(org.omg.CORBA.portable.InputStream istream) {
        if (!(istream instanceof org.omg.CORBA_2_3.portable.InputStream)) {
            throw new org.omg.CORBA.BAD_PARAM();
        }
        return (Stock[]) ((org.omg.CORBA_2_3.portable.InputStream) istream).read_value(_instance);
    }

    public java.io.Serializable read_value(org.omg.CORBA.portable.InputStream istream) {
        Stock[] tmp;
        int _len0 = istream.read_long();
        tmp = new Stock[_len0];
        for (int _o1 = 0; _o1 < tmp.length; ++_o1) {
            tmp[_o1] = StockHelper.read(istream);
        }
        return (java.io.Serializable) tmp;
    }

    public static void write(org.omg.CORBA.portable.OutputStream ostream, Stock[] value) {
        if (!(ostream instanceof org.omg.CORBA_2_3.portable.OutputStream)) {
            throw new org.omg.CORBA.BAD_PARAM();
        }
        ((org.omg.CORBA_2_3.portable.OutputStream) ostream).write_value(value, _instance);
    }

    public void write_value(org.omg.CORBA.portable.OutputStream ostream, java.io.Serializable value) {
        if (!(value instanceof Stock[])) {
            throw new org.omg.CORBA.MARSHAL();
        }
        Stock[] valueType = (Stock[]) value;
        ostream.write_long(valueType.length);
        for (int _i0 = 0; _i0 < valueType.length; ++_i0) {
            StockHelper.write(ostream, valueType[_i0]);
        }
    }

    public String get_id() {
        return _id;
    }

}
