/*
 * Copyright (c) 1997, 2020 Oracle and/or its affiliates.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
 * v. 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License v2.0
 * w/Classpath exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause OR GPL-2.0 WITH
 * Classpath-exception-2.0
 */

package corba.framework;

/**
 * Generates unique test-ids
 * <p>
 * The GetID class generates a test-ID for identifying tests in the
 * log files. The ID is generated by replacing the '.'s in the
 * full-qualified package name by '_'s, and then appending a user-specified
 * string Id. Since, the fully qualified package name is unique across a
 * test-suite, this results in unique IDs.
 *
 * @author Nandkumar Kesavan (nanduk@eng.sun.com)
 * @version 1.1, 04/04/01
 */
public class GetID {

    /**
     * Generates a unique ID for a test from the package name and a
     * user-specified id.
     *
     * @param o an instance of the test class
     * @param id a user-specified id to be appended
     * to the id generated by this method.
     * <em>Note: Usually, one would specify a string,</em>
     * <em>representive of the test case. </em>
     * @return a unique string ID for the test
     */
    public static String generateID(Object o, String id) {
        Package p = o.getClass().getPackage();
        String packageName = p.getName();

        //Substitute all .'s with _'s. Since . are illegal in
        //class or package names, they wouldn't occur anywhere
        //other than as package separators.
        String ID = packageName.replace('.', '_');

        //Append the non-empty user id
        if (!id.equals("")) {
            ID = ID + "_" + id;
        }
        return ID;
    }

    /**
     * Generates a unique ID for a test from the class name.
     *
     * @param o an instance of the test class
     * @return a unique string ID for the test
     */
    public static String generateID(Object o) {
        Class c = o.getClass();
        String className = c.getName();

        //Substitute all .'s with _'s. Since . are illegal in
        //class or package names, they wouldn't occur anywhere
        //other than as package separators.
        String ID = className.replace('.', '_');
        return ID;
    }
}
